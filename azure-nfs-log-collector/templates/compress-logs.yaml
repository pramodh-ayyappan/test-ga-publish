apiVersion: batch/v1
kind: CronJob
metadata:
  labels:
    app: {{ .Release.Name }}-compress-logs
  name: {{ .Release.Name }}-compress-logs
  namespace: {{ .Release.Namespace }}
spec:
  concurrencyPolicy: {{ .Values.compressLogs.concurrencyPolicy }}
  failedJobsHistoryLimit: {{ .Values.compressLogs.failedJobsHistoryLimit }}
  jobTemplate:
    metadata:
    spec:
      template:
        metadata:
          annotations:
            cluster-autoscaler.kubernetes.io/safe-to-evict: "false"
          labels:
            app: {{ .Release.Name }}-compress-logs
            release: compress-logs
        spec:
          containers:
            - env:
                - name: COMPRESS_LOGS_BEFORE_DAYS
                  valueFrom:
                    secretKeyRef:
                      key: COMPRESS_LOGS_BEFORE_DAYS
                      name: {{ .Release.Name  }}-compress-logs-configs
              command:
                - /bin/sh
                - -c
                - |
                  LOG_PATH="/var/log/efs"
                  total_uncompressed=$(find "$LOG_PATH" -type f -name '*.log' -mtime +$COMPRESS_LOGS_BEFORE_DAYS | wc -l)
                  echo "Total .log files to be compressed before $COMPRESS_LOGS_BEFORE_DAYS days: $total_uncompressed"
                  while [ "$total_uncompressed" -gt 0 ]; do
                      echo "Compressing $total_uncompressed files..."
                      uncompressed_files=$(find "$LOG_PATH" -type f -name "*.log" -mtime +$COMPRESS_LOGS_BEFORE_DAYS)
                      echo "$uncompressed_files" | xargs -I {} sh -c '
                            pod=$(basename "${1%/*.*}")
                            day=$(date -r "$1" +%Y%m%d)
                            zip_file="${1%/*}/${pod}_${day}.zip"
                            [ -f "$zip_file" ] && cmd="zip -j -u $zip_file $1" || cmd="zip -j $zip_file $1"
                            $cmd
                            rm "$1"
                            ' _ {}
                      remaining_uncompressed_files=$(find "$LOG_PATH" -type f -name '*.log' -mtime +$COMPRESS_LOGS_BEFORE_DAYS | wc -l)
                      echo "$remaining_uncompressed_files files remains to be compressed out of $total_uncompressed"
                      total_uncompressed=$remaining_uncompressed_files
                  done
                  echo "All files compressed."
              image: {{ .Values.compressLogs.image }}
              imagePullPolicy: {{ .Values.compressLogs.imagePullPolicy }}
              name: compress-logs
              resources:
                limits:
                  cpu: {{ .Values.compressLogs.resources.limits.cpu }}
                  memory: {{ .Values.compressLogs.resources.limits.memory }}
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              volumeMounts:
                - mountPath: /etc/credentialfiles/
                  name: compress-logs-file-credentials-vol
                - mountPath: /var/log/dumps
                  name: dump-vol
                - mountPath: /var/log/efs/
                  name: logs-vol-azure-files
          restartPolicy: {{ .Values.compressLogs.restartPolicy }}
          tolerations:
            - effect: {{ .Values.global.tolerations.effect }}
              key: {{ .Values.global.tolerations.key }}
              operator: {{ .Values.global.tolerations.operator }}
              value: {{ .Values.global.tolerations.value }}
          volumes:
            - name: compress-logs-file-credentials-vol
              secret:
                defaultMode: 420
                secretName: {{ .Release.Name  }}-compress-logs-file-credentials
            - hostPath:
                path: /var/log/dumps/compress-logs
                type: DirectoryOrCreate
              name: dump-vol
            - name: logs-vol-azure-files
              persistentVolumeClaim:
                claimName: {{ .Release.Name }}-pvc
  schedule: {{ .Values.compressLogs.schedule }}
  successfulJobsHistoryLimit: {{ .Values.compressLogs.successfulJobsHistoryLimit }}
  suspend: {{ .Values.compressLogs.suspend }}

---
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Release.Name  }}-compress-logs-file-credentials
  namespace: default
type: Opaque

---
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Release.Name  }}-compress-logs-configs
type: Opaque
data:
  {{- range $index, $value := .Values.compressLogs.configurations }}
    {{ $index }}: {{ $value | default "" | b64enc | default ("" | quote) }}
  {{- end }}