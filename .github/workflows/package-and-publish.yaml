name: Package and Publish Helm Chart

on:
  workflow_dispatch:

env:
  ZIP_NAME: helm-charts

jobs:
  package:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up Helm
        run: |
          sudo apt-get update
          sudo apt-get install -y curl
          curl https://get.helm.sh/helm-v3.5.1-linux-amd64.tar.gz | tar xz
          sudo mv linux-amd64/helm /usr/local/bin/helm

      - name: Check if artifact exists
        id: check_artifact
        uses: actions/github-script@v6
        with:
          script: |
            const artifactName = process.env.ZIP_NAME;
            const artifacts = await github.rest.actions.listArtifactsForRepo(
              owner: context.repo.owner,
              repo: context.repo.repo
            });
            console.log(artifacts);
            console.log(artifacts.name);
            console.log(artifacts.data.artifacts);
            return artifacts.data.artifacts.some(artifact => artifact.name === artifactName);
          result-encoding: string
          debug: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ZIP_NAME: ${{ env.ZIP_NAME }}

      - name: Download artifact
        if: steps.check_artifact.outputs.result == 'true'
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.ZIP_NAME }}
          path: charts/

      - name: Package and publish chart
        run: |
          for dir in */; do
            if [[ "$dir" != .* ]] && [[ "$dir" != "charts/" ]] && [[ -f "$dir/Chart.yaml" ]]; then
              helm package "$dir"
            fi
          done
          mkdir -p charts
          mv *.tgz charts/
          helm repo index charts/
          ls -la charts
      
      - name: 'Upload zipped charts as Artifact'
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ZIP_NAME }}
          path: ./charts/

      - name: Publish to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          publish_dir: charts
          keep_files: false
          force_orphan: false
          deploy_key: ${{ secrets.ACTIONS_DEPLOY_KEY }}
